name: Laravel CI

on:
  push:
    branches:
      - main
      - develop
  pull_request:
    branches:
      - main
      - develop

jobs:
  laravel-tests:
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: laravel_test
          MYSQL_USER: laravel
          MYSQL_PASSWORD: password
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
    - uses: actions/checkout@v3

    - name: Copy .env
      run: php -r "file_exists('.env') || copy('.env.example', '.env');"

    - name: Configure Database
      run: |
        sed -i 's/DB_HOST=.*/DB_HOST=127.0.0.1/' .env
        sed -i 's/DB_DATABASE=.*/DB_DATABASE=laravel_test/' .env
        sed -i 's/DB_USERNAME=.*/DB_USERNAME=laravel/' .env
        sed -i 's/DB_PASSWORD=.*/DB_PASSWORD=password/' .env

    - name: Verify MySQL connection
      run: |
        mysql --host 127.0.0.1 --port 3306 -ularavel -ppassword -e "SHOW DATABASES;"

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: '8.2'
        extensions: mbstring, xml, ctype, iconv, intl, pdo_mysql, mysql, zip
        coverage: xdebug
        tools: composer:v2, php-cs-fixer, phpstan

    - name: Setup Node.js
      uses: actions/setup-node@v3
      with:
        node-version: '18'
        cache: 'npm'

    - name: Cache Composer packages
      id: composer-cache
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-php-${{ hashFiles('**/composer.lock') }}
        restore-keys: |
          ${{ runner.os }}-php-

    - name: Update Composer
      run: composer update --no-interaction --no-scripts --no-progress --prefer-dist

    - name: Install Composer Dependencies
      run: composer install --no-interaction --no-progress --prefer-dist

    - name: Publish Package Assets
      run: |
        php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"
        php artisan vendor:publish --tag="permission-config"

    - name: Install NPM Dependencies
      run: |
        npm ci
        npm run build

    - name: Generate key
      run: php artisan key:generate --env=testing

    - name: Directory Permissions
      run: chmod -R 777 storage bootstrap/cache

    - name: Check Code Style
      run: |
        ./vendor/bin/pint --test
        
    - name: Static Analysis
      run: |
        ./vendor/bin/phpstan analyse --memory-limit=2G

    - name: Security Check
      run: |
        composer audit

    - name: Run Migrations and Seeds
      env:
        DB_CONNECTION: mysql
        DB_HOST: 127.0.0.1
        DB_PORT: 3306
        DB_DATABASE: laravel_test
        DB_USERNAME: laravel
        DB_PASSWORD: password
      run: |
        php artisan migrate:fresh --env=testing
        php artisan db:seed --env=testing

    - name: Run Unit Tests
      run: php artisan test

  dusk-tests:
    needs: laravel-tests
    runs-on: ubuntu-latest
    
    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: testing
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: >-
          --health-cmd="mysqladmin ping"
          --health-interval=10s
          --health-timeout=5s
          --health-retries=3

    steps:
      - uses: actions/checkout@v3
      
      - name: Setup PHP
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: dom, curl, libxml, mbstring, zip, pcntl, pdo, sqlite, pdo_sqlite, bcmath, soap, intl, gd, exif, iconv
          
      - name: Install Chrome Driver
        run: php artisan dusk:chrome-driver
        
      - name: Start Chrome Driver
        run: |
          ./vendor/laravel/dusk/bin/chromedriver-linux &
          sleep 5
          
      - name: Run Laravel Server
        run: |
          php artisan serve --no-reload &
          sleep 5
          
      - name: Run Dusk Tests
        env:
          APP_URL: "http://127.0.0.1:8000"
          DB_CONNECTION: mysql
          DB_HOST: 127.0.0.1
          DB_PORT: 3306
          DB_DATABASE: testing
          DB_USERNAME: root
          DB_PASSWORD: password
        run: php artisan dusk
        
      - name: Upload Screenshots
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: screenshots
          path: tests/Browser/screenshots
          
      - name: Upload Console Logs
        if: failure()
        uses: actions/upload-artifact@v3
        with:
          name: console
          path: tests/Browser/console
          
      - name: Percy Visual Tests
        if: success()
        env:
          PERCY_TOKEN: ${{ secrets.PERCY_TOKEN }}
        run: |
          npm install @percy/cli
          npx percy exec -- php artisan dusk

  notify:
    needs: [laravel-tests, dusk-tests]
    runs-on: ubuntu-latest
    if: always()
    
    steps:
      - name: Notify Slack
        uses: 8398a7/action-slack@v3
        with:
          status: ${{ job.status }}
          fields: repo,message,commit,author,action,eventName,ref,workflow,job,took
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
        if: always()
